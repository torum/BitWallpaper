<UserControl
    x:Class="BitWallpaper.Views.UserControls.ChartContent"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BitWallpaper.Views.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:lvc="using:LiveChartsCore.SkiaSharpView.WinUI"
    xmlns:model="using:BitWallpaper.Models"
    xmlns:vm="using:BitWallpaper.ViewModels"
    mc:Ignorable="d">
    <UserControl.Resources>
        
        <DataTemplate x:Key="FolderTemplate" x:DataType="model:Depth">
            <Grid Margin="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{x:Bind Path=DepthAskFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceUpColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Grid.Column="1" x:Name="DepthPrice" FontWeight="ExtraBold" FontSize="13" Opacity="0.8" Foreground="{ThemeResource ListBoxItemSelectedForegroundThemeBrush}" Text="{x:Bind Path=DepthPriceFormatted, Mode=OneWay}" Margin="0 0 3 0" Padding="3 1 3 1" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{x:Bind Path=DepthBidFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceDownColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FileTemplate" x:DataType="model:Depth">
            <Grid Margin="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{x:Bind Path=DepthAskFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceUpColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Grid.Column="1" x:Name="DepthPrice" Text="{x:Bind Path=DepthPriceFormatted, Mode=OneWay}" Margin="3 0 3 0" Padding="3 0 3 0" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{x:Bind Path=DepthBidFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceDownColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <model:ExplorerItemTemplateSelector x:Key="ExplorerItemTemplateSelector" FolderTemplate="{StaticResource FolderTemplate}" FileTemplate="{StaticResource FileTemplate}" />

    </UserControl.Resources>
    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SecondaryTitle.Margin" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SecondaryTitle.Margin" Value="48,0,0,0"/>
                        <Setter Target="SplitViewControl.IsPaneOpen" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="test">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind Path=PairVM.IsPaneVisible, Mode=TwoWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PanelOpenClose.Icon" Value="OpenPane" />
                        <Setter Target="PanelOpenClose.Label" Value="hide" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  IsPaneOpen="{x:Bind Path=PairVM.IsPaneVisible, Mode=TwoWay}" -->

        <SplitView x:Name="SplitViewControl" PaneBackground="Transparent" IsPaneOpen="{x:Bind Path=PairVM.IsPaneVisible, Mode=TwoWay}" PanePlacement="Right" OpenPaneLength="280" CompactPaneLength="0" DisplayMode="CompactInline">
            <SplitView.Pane>
                <Grid Margin="12,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0"></Grid>

                    <TabView Grid.Row="1" TabWidthMode="Equal" IsAddTabButtonVisible="False" Background="Transparent" Visibility="Collapsed">
                        <TabView.TabItems>

                            <TabViewItem Header="Stat" IsClosable="False" ToolTipService.ToolTip="統計" Background="Transparent">

                                <Grid Margin="6,0,24,0" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="6"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="0"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="6"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="24時間 High" Padding="12 0 0 6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Padding="6 0 12 6" Text="{x:Bind Path=PairVM.High24String, Mode=OneWay}" Opacity="{StaticResource CustumTextOpacity}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                <!--<Style.Triggers>
                                        <DataTrigger Binding="{Binding ActivePair.HighestIn24PriceAlart}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="BlinkingStoryboard1" Storyboard="{StaticResource BlinkingStoryboard}" />
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>-->
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <CheckBox Visibility="Collapsed" Grid.Row="1" Grid.Column="0" Padding="6" ToolTipService.ToolTip ="24時間最高値でアラームを鳴らす" Margin="9,0,0,0" VerticalContentAlignment="Center" IsChecked="{x:Bind PairVM.PlaySoundHighest24h}">
                                        <CheckBox.Content>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}">24時間 High</TextBlock>
                                        </CheckBox.Content>
                                    </CheckBox>

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="起動後 High" Padding="12 0 0 6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Padding="6 0 12 6" Text="{x:Bind Path=PairVM.HighestPriceString, Mode=OneWay}" Opacity="{StaticResource CustumTextOpacity}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                <!--
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActivePair.HighestPriceAlart}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="BlinkingStoryboard1" Storyboard="{StaticResource BlinkingStoryboard}" />
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    -->
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <CheckBox Visibility="Collapsed" Grid.Row="2" Grid.Column="0" Padding="6" ToolTipService.ToolTip="起動後最高値でアラームを鳴らす" Margin="9,0,0,0" VerticalContentAlignment="Center" IsChecked="{x:Bind PairVM.PlaySoundHighest}">
                                        <CheckBox.Content>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}">起動後 High</TextBlock>
                                        </CheckBox.Content>
                                    </CheckBox>

                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="起動後 Low" Padding="12 0 0 6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Padding="6 0 12 6" Text="{x:Bind Path=PairVM.LowestPriceString, Mode=OneWay}" Opacity="{StaticResource CustumTextOpacity}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                <!--
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActivePair.LowestPriceAlart}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="BlinkingStoryboard1" Storyboard="{StaticResource BlinkingStoryboard}" />
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    -->
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <CheckBox Visibility="Collapsed" Grid.Row="3" Grid.Column="0" Padding="6" ToolTipService.ToolTip="起動後最低値でアラームを鳴らす" Margin="9,0,0,0" VerticalContentAlignment="Center" IsChecked="{x:Bind PairVM.PlaySoundLowest}">
                                        <CheckBox.Content>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}">起動後 Low</TextBlock>
                                        </CheckBox.Content>
                                    </CheckBox>

                                    <TextBlock Grid.Row="4" Grid.Column="0" Text="24時間 Low" Padding="12 0 0 6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <TextBlock Grid.Row="4" Grid.Column="1" Padding="6 0 12 6" Text="{x:Bind Path=PairVM.Low24String, Mode=OneWay}" Opacity="{StaticResource CustumTextOpacity}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                <!--
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActivePair.LowestIn24PriceAlart}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="BlinkingStoryboard1" Storyboard="{StaticResource BlinkingStoryboard}" />
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    -->
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <CheckBox Visibility="Collapsed" Grid.Row="4" Grid.Column="0" Padding="6" ToolTipService.ToolTip="24時間最低値でアラームを鳴らす" Margin="9,0,0,0" VerticalContentAlignment="Center" IsChecked="{x:Bind PairVM.PlaySoundLowest24h}">
                                        <CheckBox.Content>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}">24時間 Low</TextBlock>
                                        </CheckBox.Content>
                                    </CheckBox>

                                    <Border Grid.Row="5" Margin="3" />

                                    <TextBlock Grid.Row="6" Grid.Column="0" Padding="12 0 0 6" Text="24時間中央値" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" Margin="6 0 12 6" HorizontalAlignment="Right">
                                        <TextBlock Text="{x:Bind Path=PairVM.MiddleLast24PriceIcon, Mode=OneWay}" Margin="3 0 3 0" Opacity="{StaticResource CustumTextOpacity}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                    <!--
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceUpFlag, Mode=OneWay}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceUpFlag, Mode=OneWay}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleLast24PriceIcon, Mode=OneWay}" Value="＝">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        -->
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{x:Bind Path=PairVM.MiddleLast24PriceString, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    </StackPanel>

                                    <TextBlock Grid.Row="7" Grid.Column="0" Padding="12 0 0 6" Text="起動後中央値" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal" Margin="6 0 12 6" HorizontalAlignment="Right">
                                        <TextBlock Text="{x:Bind Path=PairVM.MiddleInitPriceIcon, Mode=OneWay}" Margin="3 0 3 0" Opacity="{StaticResource CustumTextOpacity}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                    <!--
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceUpFlag, Mode=OneWay}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceUpFlag, Mode=OneWay}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.MiddleInitPriceIcon, Mode=OneWay}" Value="＝">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        -->
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{x:Bind Path=PairVM.MiddleInitPriceString, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    </StackPanel>

                                    <TextBlock Grid.Row="8" Grid.Column="0" Padding="12 0 0 6" Text="起動時の値" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <StackPanel Grid.Row="8"  Grid.Column="1" Orientation="Horizontal" Margin="6 0 12 6" HorizontalAlignment="Right">
                                        <TextBlock Text="{x:Bind Path=PairVM.BasePriceIcon, Mode=OneWay}" Margin="3 0 3 0" Opacity="{StaticResource CustumTextOpacity}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                    <!--
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActivePair.BasePriceUpFlag, Mode=OneWay}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.BasePriceUpFlag, Mode=OneWay}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.BasePriceIcon, Mode=OneWay}" Value="＝">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        -->
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{x:Bind Path=PairVM.BasePriceString, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    </StackPanel>

                                    <TextBlock Grid.Row="9" Grid.Column="0" Padding="12 0 0 6" Text="1分間の平均値" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                                    <StackPanel Grid.Row="9"  Grid.Column="1" Orientation="Horizontal" Margin="6 0 12 6" HorizontalAlignment="Right">
                                        <TextBlock Text="{x:Bind Path=PairVM.AveragePriceIcon, Mode=OneWay}" Margin="3 0 3 0" Opacity="{StaticResource CustumTextOpacity}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                    <!--
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActivePair.AveragePriceUpFlag, Mode=OneWay}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceUpColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.AveragePriceUpFlag, Mode=OneWay}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceDownColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ActivePair.AveragePriceIcon, Mode=OneWay}" Value="＝">
                                                <Setter Property="Foreground" Value="{DynamicResource PriceNeutralColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        -->
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{x:Bind Path=PairVM.AveragePriceString, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"/>

                                    </StackPanel>
                                    
                                    <Border Grid.Row="10" Margin="3" />
                                    
                                    <!--

                                    <Label Grid.Row="6" Grid.Column="0" Padding="3 0 0 3.5" Content="高値アラーム" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                    <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">

                                        <TextBlock Padding="6 0 0 3.5" Text="{Binding ActivePair.AlarmPlusString, Mode=OneWay}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActivePair.AlarmPlus, Mode=OneWay}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <ToggleButton x:Name="AddAlarmPlusButton" Margin="6 0 0 3.5" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding ActivePair.AlarmPlus, Converter={StaticResource ZeroToVisibilityValueConvertor}}" Style="{DynamicResource PopupInfoToggleButtonStyle}" Content="M13,9H11V12H8V14H11V17H13V14H16V12H13M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39Z">
                                        </ToggleButton>

                                        <ToggleButton x:Name="EditAlarmPlusButton" Margin="3 0 0 3.5" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding ActivePair.AlarmPlus, Converter={StaticResource NoneZeroToVisibilityValueConvertor}}" Style="{DynamicResource PopupInfoToggleButtonStyle}" Content="M6,6.9L3.87,4.78L5.28,3.37L7.4,5.5L6,6.9M13,1V4H11V1H13M20.13,4.78L18,6.9L16.6,5.5L18.72,3.37L20.13,4.78M4.5,10.5V12.5H1.5V10.5H4.5M19.5,10.5H22.5V12.5H19.5V10.5M6,20H18A2,2 0 0,1 20,22H4A2,2 0 0,1 6,20M12,5A6,6 0 0,1 18,11V19H6V11A6,6 0 0,1 12,5Z">
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Click">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="AddAlarmPlusButton" TargetProperty="IsChecked">
                                                                <BooleanAnimationUsingKeyFrames Duration="0:0:0.001">
                                                                    <DiscreteBooleanKeyFrame Value="True"/>
                                                                </BooleanAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                        </ToggleButton>

                                    </StackPanel>

                                    <Popup IsOpen="{Binding IsChecked, ElementName=AddAlarmPlusButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=AddAlarmPlusButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="240" Height="100">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>

                                                    <Label Style="{DynamicResource  DarkLabelStyle}" Content="高値アラームの設定"/>

                                                    <Grid Grid.Row="0" Grid.Column="0" Margin="3 12 3 3">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="60"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Label Grid.Row="1" Grid.Column="0" Padding="3" VerticalAlignment="Bottom" Content="高値時：" ToolTip="(H)" Target="{Binding ElementName=TextBoxAlarmPlus}"></Label>
                                                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                            <TextBox x:Name="TextBoxAlarmPlus" Width="90" Text="{Binding ActivePair.AlarmPlus}" VerticalAlignment="Bottom" IsVisibleChanged="TextBox_IsVisibleChanged"/>
                                                            <Label Margin="3 0 0 0" VerticalAlignment="Bottom" Padding="0" Content="{Binding CurrentPairUnitString,Mode=OneWay}"></Label>
                                                            <Label Padding="0" VerticalAlignment="Bottom" Content="以上"></Label>
                                                        </StackPanel>

                                                    </Grid>

                                                    <Button x:Name="AlarmPlusSetButton" Content="セット" IsDefault="True" Width="60" Margin="6" HorizontalAlignment="Right">
                                                        <Button.Triggers>
                                                            <EventTrigger RoutedEvent="Button.Click">
                                                                <EventTrigger.Actions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard TargetName="AddAlarmPlusButton" TargetProperty="IsChecked">
                                                                            <BooleanAnimationUsingKeyFrames Duration="0:0:0.001">
                                                                                <DiscreteBooleanKeyFrame Value="False"/>
                                                                            </BooleanAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger.Actions>
                                                            </EventTrigger>
                                                        </Button.Triggers>
                                                    </Button>

                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>

                                    <Label Grid.Row="7" Grid.Column="0" Padding="3 0 0 3.5" Content="安値アラーム" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DefaultLabelStyle}"></Label>

                                    <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                                        <TextBlock Padding="6 0 0 3.5" Text="{Binding ActivePair.AlarmMinusString}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActivePair.AlarmMinus, Mode=OneWay}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <ToggleButton x:Name="AddAlarmMinusButton" Margin="6 0 0 3.5" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding ActivePair.AlarmMinus, Converter={StaticResource ZeroToVisibilityValueConvertor}}" Style="{DynamicResource PopupInfoToggleButtonStyle}" Content="M13,9H11V12H8V14H11V17H13V14H16V12H13M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39Z">
                                        </ToggleButton>

                                        <ToggleButton x:Name="EditAlarmMinusButton" Margin="3 0 0 3.5" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding ActivePair.AlarmMinus, Converter={StaticResource NoneZeroToVisibilityValueConvertor}}" Style="{DynamicResource PopupInfoToggleButtonStyle}" Content="M6,6.9L3.87,4.78L5.28,3.37L7.4,5.5L6,6.9M13,1V4H11V1H13M20.13,4.78L18,6.9L16.6,5.5L18.72,3.37L20.13,4.78M4.5,10.5V12.5H1.5V10.5H4.5M19.5,10.5H22.5V12.5H19.5V10.5M6,20H18A2,2 0 0,1 20,22H4A2,2 0 0,1 6,20M12,5A6,6 0 0,1 18,11V19H6V11A6,6 0 0,1 12,5Z">
                                            <ToggleButton.Triggers>
                                                <EventTrigger RoutedEvent="ToggleButton.Click">
                                                    <EventTrigger.Actions>
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="AddAlarmMinusButton" TargetProperty="IsChecked">
                                                                <BooleanAnimationUsingKeyFrames Duration="0:0:0.001">
                                                                    <DiscreteBooleanKeyFrame Value="True"/>
                                                                </BooleanAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger.Actions>
                                                </EventTrigger>
                                            </ToggleButton.Triggers>
                                        </ToggleButton>

                                    </StackPanel>

                                    <Popup IsOpen="{Binding IsChecked, ElementName=AddAlarmMinusButton}" StaysOpen="False" PlacementTarget="{Binding ElementName=AddAlarmMinusButton}" AllowsTransparency="True" PopupAnimation="Slide">
                                        <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="240" Height="100">
                                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                                <StackPanel>
                                                    <Label Style="{DynamicResource  DarkLabelStyle}" Content="安値アラームの設定"/>

                                                    <Grid Grid.Row="0" Grid.Column="0" Margin="3 12 3 3">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="60"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Label Grid.Row="0" Grid.Column="0" Padding="3" VerticalAlignment="Bottom" Content="安値時：" ToolTip="(L)" Target="{Binding ElementName=TextBoxAlarmMinus}"></Label>
                                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                                            <TextBox x:Name="TextBoxAlarmMinus" Width="66" Text="{Binding ActivePair.AlarmMinus}" VerticalAlignment="Bottom" IsVisibleChanged="TextBox_IsVisibleChanged"/>
                                                            <Label Margin="3 0 0 0" VerticalAlignment="Bottom" Padding="0" Content="{Binding CurrentPairUnitString,Mode=OneWay}"/>
                                                            <Label Padding="0" VerticalAlignment="Bottom" Content="以下" />
                                                        </StackPanel>

                                                    </Grid>

                                                    <Button x:Name="AlarmMinusSetButton" Content="セット" IsDefault="True" Width="60" Margin="6" HorizontalAlignment="Right">
                                                        <Button.Triggers>
                                                            <EventTrigger RoutedEvent="Button.Click">
                                                                <EventTrigger.Actions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard TargetName="AddAlarmMinusButton" TargetProperty="IsChecked">
                                                                            <BooleanAnimationUsingKeyFrames Duration="0:0:0.001">
                                                                                <DiscreteBooleanKeyFrame Value="False"/>
                                                                            </BooleanAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger.Actions>
                                                            </EventTrigger>
                                                        </Button.Triggers>
                                                    </Button>

                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>




                                </Grid>
-->
                                </Grid>
                                
                            </TabViewItem>
                            
                        </TabView.TabItems>
                    </TabView>

                    <TabView Grid.Row="2" TabWidthMode="Equal" IsAddTabButtonVisible="False" Background="Transparent">
                        <!--  VerticalAlignment="Stretch" removed so that SizeChagen gets invoked. -->
                        <TabView.TabItems>

                            <TabViewItem x:Uid="TabHeader_Orders" IsClosable="False" Opacity="0.7" Background="Transparent">

                                <Border BorderBrush="{ThemeResource ApplicationPageBackgroundThemeBrush}" BorderThickness="0.5,0,0,0">
                                    <ListBox x:Name="DepthListBox" ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" ItemsSource="{x:Bind Path=PairVM.Depth, Mode=OneWay}" SizeChanged="ListBoxDepth_SizeChanged" Background="Transparent" Margin="0,0,0,6" Padding="0,6,0,12" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <!--  VerticalAlignment="Stretch" removed so that SizeChagen gets invoked. -->
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource DefaultListBoxItemStyle}">
                                                <Setter Property="Padding" Value="3,3,3,3"/>
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <!--<ListBox.ItemTemplate>
                                            <DataTemplate x:DataType="model:Depth">-->
                                                <!--
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsLTP}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthPrice" Value="Bold"/>
                                                    <Setter Property="TextBlock.FontSize" TargetName="DepthPrice" Value="13"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthPrice" Value="{DynamicResource ControlLightColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsAskBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthAskBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthAskBest" Value="{DynamicResource PriceUpColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBidBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthBidBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthBidBest" Value="{DynamicResource PriceDownColorBrush}"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding DepthBid}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthBidBest" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthPrice}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthPrice" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthAsk}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthAskBest" Value=""/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                            -->
<!--
                                                <Grid Margin="0" HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="80" />
                                                        <ColumnDefinition Width="90" />
                                                        <ColumnDefinition Width="80" />
                                                    </Grid.ColumnDefinitions>

                                                    <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{x:Bind DepthAskFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceUpColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBlock Grid.Column="1" x:Name="DepthPrice" Text="{x:Bind DepthPriceFormatted, Mode=OneWay}" Margin="3 0 3 0" Padding="3 0 3 0" HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{x:Bind DepthBidFormatted, Mode=OneWay}" Foreground="{ThemeResource PriceDownColorBrush}" Margin="0" Padding="0 0 0 0" HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>

                                            </DataTemplate>

                                        </ListBox.ItemTemplate>
-->
                                    </ListBox>
                                    <!--
                                <ListBox x:Name="DepthListBox" Margin="3 6 3 6" Padding="0 0 3 0" ItemsSource="{Binding Depths}" Style="{StaticResource DepthListBoxStyle}" AlternationCount="2" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible" SizeChanged="DepthListBox_SizeChanged" MouseDoubleClick="DepthListBox_MouseDoubleClick">
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="グルーピング表示">
                                                <MenuItem Header="OFF" Command="{Binding DepthGroupingCommand}" CommandParameter="0" IsChecked="{Binding ActivePair.IsDepthGroupingOff, Mode=OneWay}"/>
                                                <MenuItem Header="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping100, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping100, Mode=OneWay}"/>
                                                <MenuItem Header="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" Command="{Binding DepthGroupingCommand}" CommandParameter="{Binding ActivePair.DepthGrouping1000, Mode=OneWay}" IsChecked="{Binding ActivePair.IsDepthGrouping1000, Mode=OneWay}"/>
                                            </MenuItem>
                                            <MenuItem Header="中央に戻る" x:Name="DepthListBoxCenter" Click="DepthListBoxCenter_Click"></MenuItem>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Focusable" Value="true"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0" HorizontalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="66" />
                                                    <ColumnDefinition Width="80" />
                                                    <ColumnDefinition Width="66" />
                                                </Grid.ColumnDefinitions>
                                                
                                                <TextBlock Grid.Column="0" x:Name="DepthAskBest" Text="{Binding Path=DepthAsk, Mode=OneWay}" Margin="0" Padding="0 0 0 0" Foreground="{DynamicResource PriceUpColorBrush}" HorizontalAlignment="Right"/>
                                                <TextBlock Grid.Column="1" x:Name="DepthPrice" Text="{Binding Path=DepthPrice, Mode=OneWay}" Margin="3 0 3 0" Padding="3 0 3 0" Foreground="{DynamicResource ControlMediumColorBrush}" HorizontalAlignment="Right"/>
                                                <TextBlock Grid.Column="2" x:Name="DepthBidBest" Text="{Binding Path=DepthBid, Mode=OneWay}" Margin="0" Padding="0 0 3 0" Foreground="{DynamicResource PriceDownColorBrush}"  HorizontalAlignment="Right"/>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsLTP}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthPrice" Value="Bold"/>
                                                    <Setter Property="TextBlock.FontSize" TargetName="DepthPrice" Value="13"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthPrice" Value="{DynamicResource ControlLightColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsAskBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthAskBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthAskBest" Value="{DynamicResource PriceUpColorBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBidBest}" Value="true">
                                                    <Setter Property="TextBlock.FontWeight" TargetName="DepthBidBest" Value="Bold"/>
                                                    <Setter Property="TextBlock.Foreground" TargetName="DepthBidBest" Value="{DynamicResource PriceDownColorBrush}"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding DepthBid}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthBidBest" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthPrice}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthPrice" Value=""/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DepthAsk}" Value="0">
                                                    <Setter Property="TextBlock.Text" TargetName="DepthAskBest" Value=""/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
-->
                                </Border>
                            
                            </TabViewItem>

                            <TabViewItem x:Uid="TabHeader_History" IsClosable="False" Opacity="0.7" Background="Transparent">

                                <Border BorderBrush="{ThemeResource ApplicationPageBackgroundThemeBrush}" BorderThickness="0.5,0,0,0">
                                    <ListBox ItemsSource="{x:Bind Path=PairVM.Transactions, Mode=OneWay}" Background="Transparent" Margin="0,0,0,6" HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource DefaultListBoxItemStyle}">
                                                <Setter Property="Padding" Value="3"/>
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate x:DataType="model:Transaction">
                                                <Grid Margin="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="80" />
                                                        <ColumnDefinition Width="90" />
                                                        <ColumnDefinition Width="80" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" x:Name="TransExecutedAt" Text="{x:Bind ExecutedAtFormatted, Mode=OneWay}" Margin="0" Padding="3 0 3 0" HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style></TextBlock>
                                                    <TextBlock Grid.Column="1" x:Name="TransPrice" Text="{x:Bind PriceFormatted, Mode=OneWay}" Margin="0" Padding="3 0 3 0"  HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style></TextBlock>
                                                    <TextBlock Grid.Column="2" x:Name="TransAmount" Text="{x:Bind Amount, Mode=OneWay}" Margin="0" Padding="3 0 3 0" HorizontalAlignment="Right">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
                                                            </Style>
                                                        </TextBlock.Style></TextBlock>

                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>

                                    </ListBox>
                                </Border>

                            </TabViewItem>

                        </TabView.TabItems>
                    </TabView>
                    
                </Grid>
            </SplitView.Pane>
            
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel x:Name="SecondaryTitle" Grid.Row="0" Grid.Column="0" Margin="0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="12,12,0,0" Text="{x:Bind Path=PairVM.PairString, Mode=OneWay}" Style="{StaticResource BaseTextBlockStyle}"/>

                        <TextBlock Margin="12,12,0,0" Text="" Style="{StaticResource BaseTextBlockStyle}"/>
                        <TextBlock Margin="0,12,0,0" Text="{x:Bind Mode=OneWay, Path=PairVM.LtpString}" Style="{StaticResource BaseTextBlockStyle}"/>

                        <TextBlock Text="-" Margin="12,12,0,0" Style="{StaticResource BaseTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>

                        <TextBlock Margin="12,12,0,0" Text="{x:Bind Path=PairVM.TickTimeStampString, Mode=OneWay}" Style="{StaticResource BaseTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"/>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                        <TextBlock Text="24H High: " Padding="6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                        <TextBlock Text="{x:Bind Path=PairVM.High24String, Mode=OneWay}" Padding="0,6,0,6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>

                        <TextBlock Text="," Padding="0,6,3,6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                        
                        <TextBlock Text="24H Low: " Padding="6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>
                        <TextBlock Text="{x:Bind Path=PairVM.Low24String, Mode=OneWay}" Padding="0,6,0,6" Style="{StaticResource CaptionTextBlockStyle}" Opacity="{StaticResource CustumTextOpacity}"></TextBlock>

                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom">

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">

                        <AppBarButton Label="{x:Bind PairVM.SelectedCandleTypeLabelString, Mode=OneWay}" ToolTipService.ToolTip="CandleType" IsCompact="False" VerticalAlignment="Bottom" Margin="0" Padding="0" Opacity="0.4">
                            <AppBarButton.Icon>
                                <PathIcon>
                                    <PathIcon.Data>
                                        M3,22V8H7V22H3M10,22V2H14V22H10M17,22V14H21V22H17Z</PathIcon.Data>
                                </PathIcon>
                            </AppBarButton.Icon>
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Uid="1min" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.OneMin}"/>
                                    <MenuFlyoutItem x:Uid="5min" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.FiveMin}"/>
                                    <MenuFlyoutItem x:Uid="15min" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.FifteenMin}"/>
                                    <MenuFlyoutItem x:Uid="30min" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.ThirtyMin}"/>
                                    <MenuFlyoutSeparator/>

                                    <MenuFlyoutItem x:Uid="1hour" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.OneHour}"/>
                                    <MenuFlyoutItem x:Uid="4hour" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.FourHour}"/>
                                    <MenuFlyoutItem x:Uid="8hour" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.EightHour}"/>
                                    <MenuFlyoutItem x:Uid="12hour" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.TwelveHour}"/>
                                    <MenuFlyoutSeparator/>

                                    <MenuFlyoutItem x:Uid="1day" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.OneDay}"/>
                                    <MenuFlyoutItem x:Uid="1week" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.OneWeek}"/>
                                    <MenuFlyoutItem x:Uid="1month" Command="{x:Bind PairVM.ChangeCandleTypeCommand}" CommandParameter="{x:Bind model:CandleTypes.OneMonth}"/>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>

                        <AppBarButton Label="{x:Bind PairVM.AlarmLabel, Mode=OneWay}" IsCompact="False" VerticalAlignment="Bottom" Margin="0" Padding="0" Opacity="0.4" Click="AppBarButton_Click">
                            <AppBarButton.Icon>
                                <PathIcon>
                                    <PathIcon.Data>
                                        M10,21H14A2,2 0 0,1 12,23A2,2 0 0,1 10,21M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M17,11A5,5 0 0,0 12,6A5,5 0 0,0 7,11V18H17V11M19.75,3.19L18.33,4.61C20.04,6.3 21,8.6 21,11H23C23,8.07 21.84,5.25 19.75,3.19M1,11H3C3,8.6 3.96,6.3 5.67,4.61L4.25,3.19C2.16,5.25 1,8.07 1,11Z
                                    </PathIcon.Data>
                                </PathIcon>
                            </AppBarButton.Icon>
                        </AppBarButton>

                        <AppBarButton x:Name="PanelOpenClose" Icon="ClosePane" Label="show" IsCompact="False" x:Uid="AppCommand_DisplayInfoPanel" Command="{x:Bind PairVM.TogglePaneVisibilityCommand}" VerticalAlignment="Bottom" Margin="0" Padding="0" Opacity="0.4">
                            <AppBarButton.KeyboardAccelerators>
                                <KeyboardAccelerator Modifiers="Control" Key="I" />
                            </AppBarButton.KeyboardAccelerators>
                        </AppBarButton>
                        
                    </StackPanel>
                    <!--
                    <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" Margin="0,0,9,6" Opacity="0.4">




                        
                        <CommandBar.SecondaryCommands>

                        </CommandBar.SecondaryCommands>
                        
                    </CommandBar>
                     -->
                    <!--
                    <DropDownButton Content="Email" VerticalAlignment="Bottom" Margin="0,0,9,6" Opacity="0.4">
                        <DropDownButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem Text="Send"/>
                                <MenuFlyoutItem Text="Reply"/>
                                <MenuFlyoutItem Text="Reply All"/>
                            </MenuFlyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                    -->
                </StackPanel>

                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                    <lvc:CartesianChart x:Name="LiveChart"
                        Margin="0,0,0,0" 
                                    Series="{x:Bind PairVM.Series, Mode=OneWay}" 
                                    XAxes="{x:Bind PairVM.XAxes, Mode=OneWay}" 
                                    YAxes="{x:Bind PairVM.YAxes, Mode=OneWay}" 
                                    Sections="{x:Bind PairVM.Sections, Mode=OneWay}" 
                                    TooltipPosition="{x:Bind PairVM.IsChartTooltipVisibleTemp, Mode=OneWay}"
                                    ZoomMode="X"/>
                
                </Grid>

            </Grid>
            
        </SplitView>
    </Grid>
</UserControl>
