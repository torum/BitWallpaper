<Application
    x:Class="BitWallpaper.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:helpers="using:BitWallpaper.Helpers"
    xmlns:local="using:BitWallpaper">
    <Application.Resources>
        <ResourceDictionary>

            <!-- Other app resources here -->
            <!--
            <CornerRadius x:Key="NavigationViewContentGridCornerRadius">0,0,0,0</CornerRadius>
            -->
            <helpers:ElementThemeEnumToBooleanConverter x:Key="ElementThemeEnumToBooleanConverter" />
            <helpers:SystemBackdropEnumToBooleanConverter x:Key="SystemBackdropEnumToBooleanConverter" />

            <x:Double x:Key="PivotHeaderItemFontSize">18</x:Double>

            <x:Double x:Key="CustumTextOpacity">0.7</x:Double>

            <SolidColorBrush x:Key="PriceUpColorBrush" Color="#8BC34A"/>
            <SolidColorBrush x:Key="PriceDownColorBrush" Color="#EF5350"/>

            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary Source="/Styles/Colors.xaml" />
                <ResourceDictionary Source="/Styles/FontSizes.xaml" />
                <ResourceDictionary Source="/Styles/Thickness.xaml" />
                <ResourceDictionary Source="/Styles/TextBlock.xaml" />

                <ResourceDictionary>

                    <Style x:Key="NavigationViewItemStyle1" TargetType="controls:NavigationViewItem">
                        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
                        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
                        <Setter Property="UseSystemFocusVisuals" Value="True" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="TabNavigation" Value="Once" />
                        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="controls:NavigationViewItem">
                                    <Grid x:Name="NVIRootGrid">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                                <VisualState x:Name="OnLeftNavigation">
                                                    <VisualState.Setters>
                                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane2}" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="OnTopNavigationPrimary">
                                                    <VisualState.Setters>
                                                        <Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource TopNavigationViewItemMargin}" />
                                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                                        <Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="OnTopNavigationOverflow">
                                                    <VisualState.Setters>
                                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                        </VisualStateManager.VisualStateGroups>
                                        <NavigationViewItemPresenter x:Name="NavigationViewItemPresenter" Icon="{TemplateBinding Icon}" InfoBadge="{TemplateBinding InfoBadge}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" IsTabStop="false" Control.IsTemplateFocusTarget="True" />
                                        <ItemsRepeater x:Load="False" Grid.Row="1" Visibility="Collapsed" x:Name="NavigationViewItemMenuItemsHost">
                                            <ItemsRepeater.Layout>
                                                <StackLayout Orientation="Vertical" />
                                            </ItemsRepeater.Layout>
                                        </ItemsRepeater>
                                        <FlyoutBase.AttachedFlyout>
                                            <Flyout x:Name="ChildrenFlyout" Placement="RightEdgeAlignedTop">
                                                <Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                                    <ScrollViewer x:Name="ScrollViewer"
                ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                AutomationProperties.AccessibilityView="Raw">
                                                                        <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="{TemplateBinding CornerRadius}" />
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Flyout.FlyoutPresenterStyle>
                                                <Grid x:Name="FlyoutRootGrid">
                                                    <Grid x:Name="FlyoutContentGrid" />

                                                </Grid>
                                            </Flyout>
                                        </FlyoutBase.AttachedFlyout>

                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane2" TargetType="primitives:NavigationViewItemPresenter">
                        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
                        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
                        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
                        <Setter Property="UseSystemFocusVisuals" Value="True" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                                    <Grid x:Name="LayoutRoot" Opacity="0.5" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" Margin="{ThemeResource NavigationViewItemButtonMargin}" Control.IsTemplateFocusTarget="True">
                                        <Grid.Resources />

                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="PointerStates">
                                                <VisualState x:Name="Normal" />

                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                                        <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />

                                                        <Setter Target="LayoutRoot.Opacity" Value="0.8" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                                        <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />

                                                        <Setter Target="LayoutRoot.Opacity" Value="0.9" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="Selected">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />

                                                        <Setter Target="LayoutRoot.Opacity" Value="1" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="PointerOverSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                                        <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />

                                                        <Setter Target="LayoutRoot.Opacity" Value="0.9" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="PressedSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                                        <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />

                                                        <Setter Target="LayoutRoot.Opacity" Value="1" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="DisabledStates">
                                                <VisualState x:Name="Enabled" />

                                                <VisualState x:Name="Disabled">
                                                    <VisualState.Setters>
                                                        <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="IconStates">
                                                <VisualState x:Name="IconVisible" />
                                                <VisualState x:Name="IconCollapsed">
                                                    <VisualState.Setters>
                                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                                        <Setter Target="IconColumn.Width" Value="8" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="InfoBadgeStates">
                                                <VisualState x:Name="InfoBadgeVisible" />
                                                <VisualState x:Name="InfoBadgeCollapsed">
                                                    <VisualState.Setters>
                                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ChevronStates">
                                                <VisualState x:Name="ChevronHidden" />
                                                <VisualState x:Name="ChevronVisibleOpen">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="ChevronVisibleClosed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="PointerChevronStates">
                                                <VisualState x:Name="NormalChevronHidden" />
                                                <VisualState x:Name="NormalChevronVisibleOpen">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOn" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="NormalChevronVisibleClosed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="NormalOff" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverChevronHidden">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOff" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOn" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PointerOverOff" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedChevronHidden">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOff" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedChevronVisibleOpen">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOn" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedChevronVisibleClosed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ExpandCollapseChevronIcon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                                        <Setter Target="ExpandCollapseChevron.(controls:AnimatedIcon.State)" Value="PressedOff" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                                                    <VisualState.Setters>
                                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource NavigationViewCompactItemContentPresenterMargin}" />
                                                        <Setter Target="ContentGrid.Margin" Value="0,0,0,0" />
                                                        <Setter Target="InfoBadgePresenter.(Grid.Column)" Value="0" />
                                                        <Setter Target="InfoBadgePresenter.(Grid.ColumnSpan)" Value="4" />
                                                        <Setter Target="InfoBadgePresenter.VerticalAlignment" Value="Top" />
                                                        <Setter Target="InfoBadgePresenter.HorizontalAlignment" Value="Right" />
                                                        <Setter Target="InfoBadgePresenter.Margin" Value="0,2,2,0" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                        </VisualStateManager.VisualStateGroups>

                                        <Grid x:Name="PresenterContentRootGrid">
                                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Rectangle x:Name="SelectionIndicator" Width="{ThemeResource NavigationViewSelectionIndicatorWidth}" Height="{ThemeResource NavigationViewSelectionIndicatorHeight}" Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}" Opacity="0.0" RadiusX="{ThemeResource NavigationViewSelectionIndicatorRadius}" RadiusY="{ThemeResource NavigationViewSelectionIndicatorRadius}" />
                                            </Grid>
                                            <Grid x:Name="ContentGrid" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}" Margin="0,0,14,0" HorizontalAlignment="Stretch">

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="IconColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerIconWidth}">
                                                    <Viewbox x:Name="IconBox" Height="{ThemeResource NavigationViewItemOnLeftIconBoxHeight}" HorizontalAlignment="Center" Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}">
                                                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls" />
                                                    </Viewbox>
                                                </Border>
                                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{ThemeResource NavigationViewItemContentPresenterMargin}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Padding="{TemplateBinding Padding}" AutomationProperties.AccessibilityView="Raw" />
                                                <Grid x:Load="False" x:Name="ExpandCollapseChevron" Grid.Column="3" Visibility="Collapsed" HorizontalAlignment="Right" Width="40" Margin="{ThemeResource NavigationViewItemExpandChevronMargin}" Background="Transparent" local:AnimatedIcon.State="NormalOff" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                                                    <controls:AnimatedIcon Width="12" Height="12" RenderTransformOrigin="0.5, 0.5" x:Name="ExpandCollapseChevronIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" AutomationProperties.AccessibilityView="Raw" x:DeferLoadStrategy="Lazy">
                                                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                                        <controls:AnimatedIcon.FallbackIconSource>
                                                            <controls:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}" FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" Glyph="{StaticResource NavigationViewItemExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                                        </controls:AnimatedIcon.FallbackIconSource>
                                                        <controls:AnimatedIcon.RenderTransform />
                                                    </controls:AnimatedIcon>

                                                </Grid>
                                                <ContentPresenter x:Name="InfoBadgePresenter" Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding InfoBadge}" />
                                            </Grid>

                                        </Grid>

                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <ResourceDictionary>
<!--
                    <SolidColorBrush x:Key="asdf" Color="Transparent" />
                    <ThemeResource x:Key="TabViewBackground" ResourceKey="asdf"></ThemeResource>
                    <ThemeResource x:Key="TabViewItemHeaderBackground" ResourceKey="asdf"></ThemeResource>
                    <ThemeResource x:Key="TabViewItemHeaderBackgroundSelected" ResourceKey="asdf"></ThemeResource>
                    <ThemeResource x:Key="TabViewItemHeaderBackgroundPointerOver" ResourceKey="asdf"></ThemeResource>
                    <ThemeResource x:Key="TabViewItemHeaderBackgroundPressed" ResourceKey="asdf"></ThemeResource>
                    <ThemeResource x:Key="TabViewItemHeaderBackgroundDisabled" ResourceKey="asdf"></ThemeResource>
-->
                    <Style x:Name="DefaultTabViewItemStyle" TargetType="controls:TabViewItem">
                        <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                        <Setter Property="MinHeight" Value="{ThemeResource TabViewItemMinHeight}" />
                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                        <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemBorderThickness}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemBorderBrush}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="controls:TabViewItem">
                                    <Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}" UseLayoutRounding="False">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="LeftColumn" Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition x:Name="RightColumn" Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RenderTransform>
                                            <ScaleTransform x:Name="LayoutRootScale" />
                                        </Grid.RenderTransform>

                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />

                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonForeground}" />
                                                        <Setter Target="TabSeparator.Opacity" Value="0" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonForeground}" />
                                                        <Setter Target="TabSeparator.Opacity" Value="0" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="Selected">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Visibility" Value="Collapsed" />
                                                        <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                        <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                        <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}" />
                                                        <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                        <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                        <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="PointerOverSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Visibility" Value="Collapsed" />
                                                        <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                        <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                        <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}" />
                                                        <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                        <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                        <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                                <VisualState x:Name="PressedSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Visibility" Value="Collapsed" />
                                                        <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Visibility" Value="Visible" />
                                                        <Setter Target="SelectedBackgroundPath.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                        <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                        <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                        <Setter Target="TabContainer.BorderThickness" Value="{ThemeResource TabViewSelectedItemBorderThickness}" />
                                                        <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                        <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                        <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="DisabledStates">
                                                <VisualState x:Name="Enabled" />

                                                <VisualState x:Name="Disabled">
                                                    <VisualState.Setters>
                                                        <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundDisabled}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                        <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
                                                        <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonBackground}" />
                                                        <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonForeground}" />
                                                        <Setter Target="CloseButton.BorderBrush" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushDisabled}" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                                <VisualState x:Name="DataAvailable" />
                                                <VisualState x:Name="DataPlaceholder" />

                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="ReorderHintStates">
                                                <VisualState x:Name="NoReorderHint" />

                                                <VisualState x:Name="BottomReorderHint">

                                                    <Storyboard>
                                                        <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="TopReorderHint">

                                                    <Storyboard>
                                                        <DragOverThemeAnimation Direction="Top" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="RightReorderHint">

                                                    <Storyboard>
                                                        <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="LeftReorderHint">

                                                    <Storyboard>
                                                        <DragOverThemeAnimation Direction="Left" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
                                                </VisualStateGroup.Transitions>

                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="DragStates">
                                                <VisualState x:Name="NotDragging" />

                                                <VisualState x:Name="Dragging">

                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}" Duration="0" />
                                                        <DragItemThemeAnimation TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="DraggingTarget" />
                                                <VisualState x:Name="MultipleDraggingPrimary" />

                                                <VisualState x:Name="MultipleDraggingSecondary" />

                                                <VisualState x:Name="DraggedPlaceholder" />

                                                <VisualState x:Name="Reordering">

                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderThemeOpacity}" Duration="0:0:0.240" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="ReorderingTarget">

                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderTargetThemeOpacity}" Duration="0:0:0.240" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MultipleReorderingPrimary" />

                                                <VisualState x:Name="ReorderedPlaceholder">

                                                    <Storyboard>
                                                        <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="DragOver">

                                                    <Storyboard>
                                                        <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                                                </VisualStateGroup.Transitions>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="IconStates">
                                                <VisualState x:Name="Icon" />
                                                <VisualState x:Name="NoIcon">
                                                    <VisualState.Setters>
                                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="TabWidthModes">
                                                <VisualState x:Name="StandardWidth" />
                                                <VisualState x:Name="Compact">
                                                    <VisualState.Setters>
                                                        <Setter Target="IconBox.Margin" Value="0,0,0,0" />
                                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                                        <Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CloseIconStates">
                                                <VisualState x:Name="CloseButtonVisible" />
                                                <VisualState x:Name="CloseButtonCollapsed">
                                                    <VisualState.Setters>
                                                        <Setter Target="CloseButton.Visibility" Value="Collapsed" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup>
                                                <VisualState x:Name="ForegroundNotSet" />
                                                <VisualState x:Name="ForegroundSet">
                                                    <VisualState.Setters>
                                                        <Setter Target="IconControl.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                                                        <Setter Target="ContentPresenter.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>
                                            <VisualStateGroup>
                                                <VisualState x:Name="NormalBottomBorderLine" />
                                                <VisualState x:Name="LeftOfSelectedTab">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Margin" Value="0,0,2,0" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="RightOfSelectedTab">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Margin" Value="2,0,0,0" />

                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="NoBottomBorderLine">
                                                    <VisualState.Setters>
                                                        <Setter Target="BottomBorderLine.Visibility" Value="Collapsed" />

                                                    </VisualState.Setters>
                                                </VisualState>

                                            </VisualStateGroup>

                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="BottomBorderLine" BorderBrush="{ThemeResource TabViewBorderBrush}" BorderThickness="1" Height="1" Grid.ColumnSpan="3" VerticalAlignment="Bottom" />
                                        <Path x:Name="LeftRadiusRenderArc" x:Load="False" Fill="{ThemeResource TabViewBorderBrush}" VerticalAlignment="Bottom" Visibility="Collapsed" Margin="-4,0,0,0" Height="4" Width="4" Data="M4 0C4 1.19469 3.47624 2.26706 2.64582 3H0C1.65685 3 3 1.65685 3 0H4Z" />
                                        <Path x:Name="RightRadiusRenderArc" x:Load="False" Grid.Column="2" Visibility="Collapsed" Fill="{ThemeResource TabViewBorderBrush}" VerticalAlignment="Bottom" Margin="0,0,-4,0" Height="4" Width="4" Data="M0 0C0 1.19469 0.523755 2.26706 1.35418 3H4C2.34315 3 1 1.65685 1 0H0Z" />
                                        <Path x:Name="SelectedBackgroundPath" x:Load="False" Grid.ColumnSpan="3" Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}" VerticalAlignment="Bottom" Margin="-4,0,-4,0" Visibility="Collapsed" Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabViewTemplateSettings.TabGeometry}" />
                                        <Border x:Name="TabSeparator" HorizontalAlignment="Right" Width="1" Grid.Column="1" BorderBrush="{ThemeResource TabViewItemSeparator}" BorderThickness="1" Margin="{ThemeResource TabViewItemSeparatorMargin}" />
                                        <Grid x:Name="TabContainer" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Control.IsTemplateFocusTarget="True" Padding="{ThemeResource TabViewItemHeaderPadding}" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}">

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Viewbox x:Name="IconBox" MaxWidth="{ThemeResource TabViewItemHeaderIconSize}" MaxHeight="{ThemeResource TabViewItemHeaderIconSize}" Margin="{ThemeResource TabViewItemHeaderIconMargin}">
                                                <ContentControl x:Name="IconControl" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabViewTemplateSettings.IconElement}" IsTabStop="False" Foreground="{ThemeResource TabViewItemIconForeground}" HighContrastAdjustment="None" />
                                            </Viewbox>
                                            <!-- If we template bind the ContentPresenter's Content property to the TabViewItem.Header property
                                 we unfortunately run into the following issue if the header is [null] or empty:
                                 The TabViewItem.Content property will be implictly bound to the Content property of the ContentPresenter.
                                 To prevent this, we explicitly set a default empty content here and update the content in code behind. -->
                                            <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" FontWeight="{TemplateBinding FontWeight}" FontSize="{ThemeResource TabViewItemHeaderFontSize}" Foreground="{ThemeResource TabViewItemHeaderForeground}" OpticalMarginAlignment="TrimSideBearings" HighContrastAdjustment="None" />
                                            <Button x:Name="CloseButton" Grid.Column="2" Margin="{ThemeResource TabViewItemHeaderCloseMargin}" Content="&#xE711;" IsTextScaleFactorEnabled="False" IsTabStop="False" Style="{ThemeResource TabViewCloseButtonStyle}" HighContrastAdjustment="None" />

                                        </Grid>

                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TabViewCloseButtonStyle" TargetType="Button">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
                        <Setter Property="FontSize" Value="{ThemeResource TabViewItemHeaderCloseFontSize}" />
                        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                        <Setter Property="Width" Value="{ThemeResource TabViewItemHeaderCloseButtonWidth}" />
                        <Setter Property="Height" Value="{ThemeResource TabViewItemHeaderCloseButtonHeight}" />
                        <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderCloseButtonBackground}" />
                        <Setter Property="Foreground" Value="{ThemeResource TabViewItemHeaderCloseButtonForeground}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrush}" />
                        <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderThickness}" />
                        <Setter Property="FocusVisualMargin" Value="-3" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">

                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />

                                                <VisualState x:Name="PointerOver">

                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPointerOver}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPointerOver}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushPointerOver}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>

                                                <VisualState x:Name="Pressed">

                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPressed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPressed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBorderBrushPressed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>

                                            </VisualStateGroup>

                                        </VisualStateManager.VisualStateGroups>
                                    </ContentPresenter>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>
